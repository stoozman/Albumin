import streamlit as st
import pandas as pd
import matplotlib.pyplot as plt

# Заголовок приложения
st.title("Прогнозирование эффекта от введения продукта")
st.subheader("Анализ влияния на уровень альбумина у крупного рогатого скота")

# Описание приложения
st.markdown("""
Это приложение демонстрирует, как введение нашего продукта влияет на уровень альбумина у крупного рогатого скота.
Введите текущий уровень альбумина животного, чтобы получить прогноз после применения препарата.
""")

# Создаем два столбца для ввода данных и вывода результатов
col1, col2 = st.columns([1, 1])

with col1:
    st.subheader("Введите текущий показатель:")
    
    # Создаем только одно поле ввода - для альбумина
    alb = st.number_input("ALB (альбумин, г/л)", min_value=30.0, max_value=45.0, value=35.4, step=0.1)

with col2:
    st.subheader("Результаты прогноза:")
    
    # Кнопка для расчета прогноза
    if st.button("Рассчитать прогноз"):
        try:
            # Вывод результатов
            st.success(f"Текущий уровень альбумина: {alb:.2f} г/л")
            
            # Рассчитываем эффект продукта на основе фактических данных
            # Средний показатель до: 35.4, после: 33.6
            avg_decrease = 35.4 - 33.6  # Среднее снижение 1.8 г/л
            
            # Рассчитываем процентное снижение на основе средних значений
            percent_decrease = avg_decrease / 35.4  # примерно 5.08%
            
            # Применяем такое же процентное снижение к текущему значению
            expected_decrease = alb * (percent_decrease)
            expected_alb = alb - expected_decrease
            
            st.info(f"Прогнозируемый уровень после введения продукта: {expected_alb:.2f} г/л")
            st.warning(f"Снижение: -{expected_decrease:.2f} г/л (-{(expected_decrease/alb*100):.1f}%)")
            
            # Визуализация результатов
            fig, ax = plt.subplots(figsize=(8, 4))
            
            # Создаем данные для графика
            categories = ['До введения продукта', 'После введения продукта']
            values = [alb, expected_alb]
            
            # Создаем цветовую схему
            colors = ['#3498db', '#e74c3c']
            
            # Создаем столбчатую диаграмму
            ax.bar(categories, values, color=colors)
            
            # Добавляем значения на график
            for i, v in enumerate(values):
                ax.text(i, v + 0.1, f"{v:.2f}", ha='center', fontweight='bold')
            
            # Настраиваем график
            ax.set_ylabel('Уровень альбумина (г/л)')
            ax.set_title('Сравнение уровней альбумина')
            ax.grid(axis='y', linestyle='--', alpha=0.7)
            
            # Устанавливаем пределы оси Y
            y_min = min(30, min(values) - 1)
            y_max = max(40, max(values) + 1)
            ax.set_ylim(y_min, y_max)
            
            # Добавляем горизонтальную линию для нормальных значений для КРС
            ax.axhline(y=30, color='#27ae60', linestyle='--', alpha=0.5)
            ax.axhline(y=40, color='#27ae60', linestyle='--', alpha=0.5)
            ax.text(1.05, 35, 'Нормальные\nзначения\nдля КРС', verticalalignment='center', fontsize=8)
            
            # Выводим график
            st.pyplot(fig)
            
            # Добавляем интерпретацию результатов
            st.subheader("Интерпретация:")
            
            if alb < 30:
                initial_status = "ниже нормы для КРС"
            elif alb > 40:
                initial_status = "выше нормы для КРС"
            else:
                initial_status = "в пределах нормы для КРС"
                
            if expected_alb < 30:
                expected_status = "ниже нормы для КРС"
            elif expected_alb > 40:
                expected_status = "выше нормы для КРС"
            else:
                expected_status = "в пределах нормы для КРС"
                
            st.write(f"• Исходный уровень альбумина {alb:.2f} г/л - {initial_status}.")
            st.write(f"• После введения продукта ожидается уровень {expected_alb:.2f} г/л - {expected_status}.")
            
            if alb > 40 and expected_alb <= 40:
                st.write("• Продукт эффективно нормализует повышенный уровень альбумина, приводя его к нормальным значениям.")
            elif alb > 40 and expected_alb > 40:
                st.write("• Продукт снижает повышенный уровень альбумина, но может потребоваться дополнительная терапия для полной нормализации.")
            elif alb >= 30 and alb <= 40 and expected_alb < 30:
                st.write("• Продукт снижает уровень альбумина ниже нижней границы нормы. Рекомендуется мониторинг состояния животного.")
            elif alb >= 30 and alb <= 40 and expected_alb >= 30:
                st.write("• Продукт снижает уровень альбумина, но сохраняет его в пределах нормальных значений.")
            elif alb < 30:
                st.write("• Продукт дополнительно снижает и без того низкий уровень альбумина. Рекомендуется консультация ветеринарного специалиста.")
        
        except Exception as e:
            st.error(f"Произошла ошибка при расчете: {e}")
            st.error("Пожалуйста, проверьте введенные данные и попробуйте снова.")

# Добавляем дополнительную информацию
st.markdown("---")
st.subheader("Информация о параметре")
st.markdown("""
**Альбумин (ALB)** - это основной белок плазмы крови, синтезируемый в печени. У крупного рогатого скота он выполняет следующие важные функции:
- Поддержание онкотического давления крови
- Транспорт различных веществ, включая гормоны и метаболиты
- Антиоксидантные свойства
- Буферные функции

**Нормальные значения для КРС**: 30-40 г/л

**Терапевтический эффект**: Наш продукт показал статистически значимое снижение уровня альбумина. Средние значения в исследованиях на крупном рогатом скоте: до применения - 35,4 г/л, после применения - 33,6 г/л.

**Сельскохозяйственное значение**: Контролируемое снижение уровня альбумина может способствовать оптимизации метаболических процессов у коров и улучшению общих показателей продуктивности.
""")

# Добавляем информацию о применении
expander = st.expander("Показать информацию о применении продукта")
expander.markdown("""
**Рекомендации по применению продукта:**

1. **Дозировка**: согласно инструкции производителя (обычно рассчитывается на кг веса животного)
2. **Периодичность**: предпочтительно в периоды повышенной метаболической нагрузки
3. **Противопоказания**: не рекомендуется для животных с существенно сниженным уровнем альбумина (<30 г/л)
4. **Мониторинг**: рекомендуется контрольное измерение биохимических показателей через 10-14 дней после начала применения

**Экономический эффект**: Применение продукта в рекомендуемых дозах способствует оптимизации обменных процессов, что может привести к улучшению продуктивных показателей животных.
""")

# Добавляем сноску
st.markdown("---")
st.markdown("© 2025 | Информация предназначена только для демонстрационных целей в ветеринарии")